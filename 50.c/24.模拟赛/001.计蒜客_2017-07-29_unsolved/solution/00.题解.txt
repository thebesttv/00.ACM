NOIP 模拟赛（一）题解
DAY1
1.蒜头君打地鼠
[1]
  直接模拟每次能够打到哪些格子即可，时间复杂度 O(N^2*K^2),期望得分 50 分。
[2]
  将网格旋转 45 度后记录一维前缀和，每次 O(K) 查询，时间复杂度 O(N^2 * K)，期望得分 80 分。
[3]
  将网格旋转 45 后记录二维前缀和，每次 O(1) 查询，时间复杂度 O(N^2)，期望得分 100 分。

2.蒜头君的树
[1]
  每次 O(N^2) 查询每两对点的距离，时间复杂度 O(N^2 * M)，期望得分 30 分。
[2]
  考虑每条边会在答案中被计算几次，假设删除一条边后所得到的连通分量的大小为 a 和 b，则这条边会被统计 ab 次，可以用一遍 DFS 得到每个点及其子节点的总数，然后可以得到 a 和 b，对于每个询问都做一遍 DFS。时间复杂度 O(N*M),期望得分 70 分。
[3]
  对于每个询问，只考虑修改每一条边会变成什么样，则可以 O(1) 处理每一个询问，时间复杂度 O(N+M)，期望得分 100 分。

蒜头君的坐骑
[1]
  直接暴力搜索，期望得分 30 分。
[2]
  用 dp[n][m][k][M][T] 表示蒜头君现在在 (n,m) 点，已经使用了 k 次技能，当前技能还可以移动 M 次，当前攻击力为 T，则可分类讨论每一种情况，时间复杂度 O(nmtk*C)，C 约为 100，期望得分 60 分。
[3]
  用 dp[n][m][k] 表示蒜头君现在在 (n,m) 点，已经使用了 k 次技能，对于每次决策，如果不使用技能，可以转移到 dp[n][m+1][k]、dp[n+1][m][k] ，如果使用技能，则可通过 DFS 搜索可以转移到的每一个点，时间复杂度 O(n*m*k)，期望得分 100 分。

DAY2
蒜头君的兔子
[1]
  用表示第 x 年年龄为 y 的兔子有多少只，则 d[x+1][1] = ∑{ d[x][i] | 2 <= i <= 10 }, d[x+1][i+1] = d[x][i], 1 <= i <= 9。时间复杂度 O(10N)，期望得分 60 分。
[2]
  用矩阵快速幂优化递推，时间复杂度，期望得分 100 分。

蒜头君的排序
[1]
  我们知道，冒泡排序需要交换的次数就是逆序对的对数，我们可以每次 O(N^2) 来求逆序对数目，时间复杂度 O(N^2 * M),期望得分 30 分。
[2]
  考虑优化求逆序对的算法，可以用归并排序或者树状数组或者线段树来优化求逆序对的算法，时间复杂度 O(NMlog_2(N))。
[3]
  求逆序对的算法已经不能再优化，但考虑到 ∑|l[i]−l[i−1] + ∑∣r[i]−r[i−1]∣ 有限，考虑到在已知区间 [l,r] 答案的情况下可以快速求出区间 [l,r+1], [l,r−1], [l+1,r], [l−1,r] 的答案（具体实现可参考标程）。我们可以动态维护树状数组来维护答案，时间复杂度 O((∑∣l[i]−l[i−1]∣ + ∑∣r[i]−r[i−1]∣)*log_2(N))，期望得分 100 分。

蒜头君救人
[1]
  对于 10% 的数据，发现只有一个村民需要救，直接 BFS 搜索即可，期望得分 10 分。
[2]
  设村民个数为 num，用 dp[2^num][2^num][n][m] 来表示如下信息：
  第一维每一位若为 1 表示该村民正被蒜头君所背，第二维每一位若为1表示该村民已被放至安全地带，最后两维表示蒜头君当前所处位置。
  转移时只需考虑当前点是否有村民和是否是安全地带，以及可以往哪个方向移动即可。
  时间复杂度 O(4^num * NM)，期望得分 50 分。
[3]
  将前两维改用一个三进制数来储存，每一位若为 0 代表村民还在原地，为 1 代表村民正被蒜头君背着，为 2 代表村民已到达终点。时间复杂度 O(3^num * NM)，期望得分 100 分。
