TODO:
  1.三维几何
  2.2016、2017大事件
  5.期望
  7.二分
  8.洛谷夏令营
  9.IPv6
  10.http://www.cnblogs.com/geek-007/p/7296457.html
  11.Catlan数列
  12.草稿纸，格子纸
  14.图的最小色数
TO_REVIEW
  1.堆
  2.P, NP, NPC 类问题
  13.各进制小数
  15.主定理


由3个a，5个b，2个c构成的所有字符串中，包含字串“abc”的有___个。
  先“拿出”abc，那么就有 2a,4b,1c,1abc，共有 (2+4+1+1)! / (2!*4!*1!*1!) = 840 种。
  但因为除去abc，剩下的6个字母还可以组成一个abc，也就是说有重复的。
    例如： a b c abc a b b b 和 abc a b c a b b b 就是一组重复。
  那么也就是说看起来一样的，拥有两个abc的被计算了两次，那么答案中就要减去一次有两个abc的，剩下一次有两个abc的。
  拿出两个abc，就有 1a,3b,2abc，共有 (1+3+2)! / (1!*3!*2!) = 60 种，答案为 840-60=780 种。

共有n种各不相同的元素，每个元素ai分别有xi个，求出全排列的种数。
  若假设所有元素都不同时，全排列的种数为 P(n,n) = n!
  若使用ans表示，因为每种元素都有各自单独全排列的种数为xi!，则共有 x1!*x2!*...*xn! 种，即为 x1!*x2!*...*xn! * ans = (x1+x2+...+xn)! 种
  ans = (x1+x2+...+xn)! / (x1!*x2!*...*xn!)

求出 100.625 的二进制表示。
  100的二进制为1100100
  0.625 * 2 = 1.25 -> 1 |
  0.25  * 2 = 0.5  -> 0 |
  0.5   * 2 = 1.0  -> 1 |
                        V
  因此0.625二进制为0.101
  答案为 1100100.101

求出 (0.8125)10 的二进制表示。
  0.8125 * 2 = 1.625 -> 1 |
  0.625  * 2 = 1.25  -> 1 |
  0.25   * 2 = 0.5   -> 0 |
  0.5    * 2 = 1.0   -> 1 |
                          V
  (0.8125)10 = (0.1101)2
求出 (0.1101)2 的十进制表示。
  0.   1   1   0   1
  0   -1  -2  -3  -4
  答案为 2^(-1) + 2^(-2) + 2^(-4) = 0.8125

WWW: World Wide Web
URL: Uniform Resource Locator
HTTP: Hypertext Transfer Protocol
FTP: File Transfer Protocol
TCP: Transter Control Protocol

SQL: 数据库处理的语言
Oracle: 甲骨文公司的数据库管理系统
FoxPro: Fox Software 的数据库产品

RMQ：范围最值查询

局部性原理
  CPU在访问存储器时，所访问的单元都在一个较小的、连续的区域内。
  展开：
    时间局部性：一个近期被访问过的信息很可能在短期内被再次访问。
    空间局部性：近段时间所访问的范围是一个较小的、连续的区域。
    顺序局部性：大部分指令都是顺序的，且对大型数组的访问通常也为顺序。
  应用：
    用来解决不同速度缓存的分配问题。
    计算机的缓存速度：寄存器 > Cache (L1 > L2 > L3) > 内存 > 外存，而各种缓存被访问的频率和CPU访问缓存的顺序都与其相同，容量大小却与其相反。那么就要求被访问最频繁的缓存存储最有可能被访问到的信息，那么就可以使用局部性原理解决，解决过程也可以叫做预读。

NOIP：1995年开始。
NOI：1984年开始，为相应邓小平指出的“计算机普及要从娃娃抓起”。
IOI：1987年开始。
APIO：2007年开始，在IOI2006被IOI批准，算是较简单的IOI。

  NOI  IOI  NOIP  APIO
 --------------------->

编译型语言：在编译后才能运行，但一次编译即可运行任意次，如：Pascal，C，C++。
解释型语言：每次运行都要先解释再运行，如JavaScript，Python、Perl、Shell。

基数排序即为桶排

补码运算时，符号位之后的溢出直接丢弃。

栈空间：系统自动分配
堆空间：由程序员主动申请，即new出、malloc出的新空间，类似于操作系统中的内存池（给程序分配需要的内存）

TD-SCDMA: 移动的3G标准
WCDMA: 联通的3G标准
TD-LTE: 4G标准
LTE-FDD: 联通的4G标准
CDMA 2000: 电信的3G标准

O(2^(n+1)) = O(2^n)
O(n*2^(n+1)) != O(2^n)
O(2^(2n)) != O(2^n)

若一棵二叉树共有19个节点，其叶子节点可能由______个。
  A.1  B.9  C.10  D.11
解：使用n2=n0-1即可，ABC都可以，但当n0=11时，n2=10，最少就有21个节点不合题意。

climits头文件

<a href="http://luogu.org">洛谷</a>

记T为一队列，初始时为空，现有n个总和不超过32的正整数依次入列。如果无论这些数具体为何值，都能找到一种出队的方式，使得存在某个时刻队列T中的数之和恰好为9，那么n的最小值是______。
解：令队列为a1, a2, ... , an
    令队列前i项之和为si
      则s0=0，任意si(i>=1)满足0<si<=32，且si递增
    si一共有33种可能，那么建立一个有33个节点的图
    根据题目要求，只要队列满足“存在i,j使得sj-si=9”即可找到一种出队方式，使得队列中和为9。那么将每个|si-sj|=9的i,j连边，得：
      0 - 9 - 18 - 27
      1 - 10 - 19 - 28
      2 - 11 - 20 - 29
      3 - 12 - 21 - 30
      4 - 13 - 22 - 31
      5 - 14 - 23 - 32
      6 - 15 - 24
      7 - 16 - 25
      8 - 17 - 26
    那么，只要队列组成的s中存在si与sj有边相连即可使得队列中和为9，也就是说，只要选择的si之间没有连边，则没有和为9的。
    而最大的个数是18（从每行中选择1、3列 ），但s0必须被选择且为0，所以其实只能选17个使得没有和为9的。
    那么n最小就是18了。

W3C（万维网联盟）
  致力于对web进行标准化
  创建并维护了www标准
  制定了HTML, XML, CSS等一系列标准

浮点数的阶码表示指数大小

香农将热力学中的熵引入信息领域

主定理
  假设一道分治的题目，其复杂度为 f(n)=a*f(n/b)+c*n^d，c*n^d为在本次递归中的复杂度，如 f(n)=2f(n/2)+n, f(1)=0
      若 a<b^d, f(n)=O(n^d)
         a=b^d, f(n)=O(n^d*logn)
         a>b^d, f(n)=O(n^(log_b(a)))

O(n^100) < O(1.01^n)

多项式级复杂度：n在底数上
  O(1), O(logn), O(n^a)
非多项式级复杂度：
  O(a^n), O(n!)

判定性问题：输出YES或NO
最优性问题：输出最优解

P类问题：存在多项式时间复杂度的问题
  P为多项式（polynomial）的首字母
NP类问题：可以在多项式时间复杂度内验证该问题的一个解的问题
          或可以在多项式时间内猜出一个解的问题
  显然，任何问题如果是P类问题，那它一定是NP类问题
  但“任何NP类问题都是P类问题”还没得到证明，现在普遍认为P!=NP
约化：问题A如果能约化为问题B，那么就可以用解决问题B的方法解决问题A，即问题A可以变成问题B
  如 解一元一次方程 可以约化为 解一元二次方程
  若A能约化为B，则O(B)一定不小于O(A)，也可以说A不比B难
  约化具有传递性，若A可以约化为B，B可以约化为C，那么A也可以约化为C
  定义：如果能找到一个变换法则，对任意A的输入都可以按这个法则变换为B的输入，使得两程序输出相同，那么A可以约化为B，当然，这个规则的复杂度是多项式级别的
NPC类问题
  从约化的定义开始，我们可以对一个问题不断地约化，找到一个适用范围更大，但复杂度更高的算法来代替原先适用范围小、复杂度低的算法。那么，我们就想要找到一种算法，可以通吃P类和NP类算法，也就是说，存在一个NP问题，使得所有NP问题都可以约化成它。这个超级NP问题即为NPC问题，即“NP-完全”问题。
如果一个问题不存在多项式时间<b>或空间</b>的算法，那它一定不是P类问题

计算机发展的五个阶段
  电子管 -> 晶体管 -> 小规模集成电路 -> 大规模集成电路 -> 超大规模集成电路
  ENIAC是电子管计算机

同时查找 2n 个数中的最大值和最小值，最少比较次数为______。
  A. 3(n-2)/2   B. 4n-2   C. 3n-2   D. 2n-2
解：步骤：
      1.将2n个数分成n个数对
      2.将每个数对中较大的放在数组A中，较小的放在数组B中
      3.扫描数组A，得到最大值
      4.扫描数组B，得到最小值
    其中步骤2要进行n次比较，步骤3最少只需进行n-1次比较，步骤4同样最少只需n-1次比较，那么一共只需3n-2次比较。
    当然也可以令n等于1特判一下。

对于n个顶点，e条边的图，若用邻接表存储，则其bfs和dfs的时间复杂度都为O(n+e)，因为每个点最多只被访问一次，而只有访问了一个点u，才可能访问它的边。

四色定理：对任意一张平面图G，它的最小色数X(G)<=4

现有一只青蛙，初始时在n号荷叶上。当它某一时刻在k号荷叶上时，下一时刻将等概率地随机跳到1,2,……,k号荷叶之一上，直到跳到第1号荷叶为止。当n=2时，平均一共跳2次，n=3时，平均一共跳2.5次。当n等于5时，平均一共跳几次？
解：令 f(i) 为n=i时的平均跳跃次数，则
      f(i) = (f(1) + (1+f(2)) + (1+f(3)) + ... + (1+f(i)))/i
    移项得：
      f(i) = ( sum{ f(1:i-1) } + (i-1) )/(i-1)
    并且 f(1)=1。
    那么就可以解决了。
